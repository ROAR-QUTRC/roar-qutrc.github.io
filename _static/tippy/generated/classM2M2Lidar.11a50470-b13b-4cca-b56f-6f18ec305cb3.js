selector_to_html = {"a[href=\"#_CPPv49M2M2Lidar\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv49M2M2Lidar\">\n<span id=\"_CPPv39M2M2Lidar\"></span><span id=\"_CPPv29M2M2Lidar\"></span><span id=\"M2M2Lidar\"></span><span class=\"target\" id=\"classM2M2Lidar\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">M2M2Lidar</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">rclcpp</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Node</span></span><br/></dt><dd><p>Inheritence diagram for M2M2Lidar:</p><p>Collaboration diagram for M2M2Lidar:</p><p>ROS2 driver node for the M2M2 LIDAR sensor. </p><p>Handles communication with the M2M2 LIDAR sensor over TCP/IP, processes incoming data, and publishes LaserScan and IMU messages. The driver maintains the connection to the sensor and provides configuration capabilities. </p></dd>", "a[href=\"#_CPPv4N9M2M2Lidar15sensor_config_t8maxRangeE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N9M2M2Lidar15sensor_config_t8maxRangeE\">\n<span id=\"_CPPv3N9M2M2Lidar15sensor_config_t8maxRangeE\"></span><span id=\"_CPPv2N9M2M2Lidar15sensor_config_t8maxRangeE\"></span><span id=\"M2M2Lidar::sensor_config_t::maxRange__double\"></span><span class=\"target\" id=\"structM2M2Lidar_1_1sensor__config__t_1ac5ca440a3f137fc1ea2caf521601bc48\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">maxRange</span></span></span><br/></dt><dd></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N9M2M2Lidar15sensor_config_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N9M2M2Lidar15sensor_config_tE\">\n<span id=\"_CPPv3N9M2M2Lidar15sensor_config_tE\"></span><span id=\"_CPPv2N9M2M2Lidar15sensor_config_tE\"></span><span id=\"M2M2Lidar::sensor_config_t\"></span><span class=\"target\" id=\"structM2M2Lidar_1_1sensor__config__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sensor_config_t</span></span></span><br/></dt><dd><p>Configuration parameters for the M2M2 LIDAR sensor. </p><p>Configuration parameters for the M2M2 LIDAR sensor </p></dd>", "a[href=\"#_CPPv4N9M2M2Lidar15sensor_config_t13scanFrequencyE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N9M2M2Lidar15sensor_config_t13scanFrequencyE\">\n<span id=\"_CPPv3N9M2M2Lidar15sensor_config_t13scanFrequencyE\"></span><span id=\"_CPPv2N9M2M2Lidar15sensor_config_t13scanFrequencyE\"></span><span id=\"M2M2Lidar::sensor_config_t::scanFrequency__double\"></span><span class=\"target\" id=\"structM2M2Lidar_1_1sensor__config__t_1a18180108cf1d261db37c415b4681e44d\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">scanFrequency</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/runtime_error\" title=\"std::runtime_error (C++ standard class)\"><span class=\"n\">runtime_error</span></a></code></span> \u2013 If initialization fails </p></dd>", "a[href=\"#_CPPv4N9M2M2Lidar15sensor_config_t17angularResolutionE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N9M2M2Lidar15sensor_config_t17angularResolutionE\">\n<span id=\"_CPPv3N9M2M2Lidar15sensor_config_t17angularResolutionE\"></span><span id=\"_CPPv2N9M2M2Lidar15sensor_config_t17angularResolutionE\"></span><span id=\"M2M2Lidar::sensor_config_t::angularResolution__double\"></span><span class=\"target\" id=\"structM2M2Lidar_1_1sensor__config__t_1ac6e6257956398c20b1202cfc6dd15512\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">angularResolution</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9M2M2Lidar15sensor_config_t8minRangeE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N9M2M2Lidar15sensor_config_t8minRangeE\">\n<span id=\"_CPPv3N9M2M2Lidar15sensor_config_t8minRangeE\"></span><span id=\"_CPPv2N9M2M2Lidar15sensor_config_t8minRangeE\"></span><span id=\"M2M2Lidar::sensor_config_t::minRange__double\"></span><span class=\"target\" id=\"structM2M2Lidar_1_1sensor__config__t_1a53da0c90464a84d806d33e2b1b4917d4\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">minRange</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#breathe-section-title-public-members\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-members\">Public Members<a class=\"headerlink\" href=\"#breathe-section-title-public-members\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-p-options\"]": "<dt id=\"_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-p-options\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">rclcpp</span><span class=\"p\">::</span><span class=\"n\">NodeOptions</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">options</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">rclcpp</span><span class=\"p\">::</span><span class=\"n\">NodeOptions</span><span class=\"p\">(</span><span class=\"p\">)</span></dt><dd><p>Node options for ROS2 configuration </p></dd>", "a[href=\"#_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE\">\n<span id=\"_CPPv3N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE\"></span><span id=\"_CPPv2N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE\"></span><span id=\"M2M2Lidar::M2M2Lidar__rclcpp::NodeOptionsCR\"></span><span class=\"target\" id=\"classM2M2Lidar_1a9256ab3218333b7d1e1da0638159d02a\"></span><span><span class=\"k\"><span class=\"pre\">explicit</span></span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">M2M2Lidar</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">rclcpp</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">NodeOptions</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N9M2M2Lidar9M2M2LidarERKN6rclcpp11NodeOptionsE-p-options\" title=\"M2M2Lidar::M2M2Lidar::options (C++ function parameter) \u2014 Node options for ROS2 configuration\"><span class=\"n sig-param\"><span class=\"pre\">options</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">rclcpp</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">NodeOptions</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a new <a class=\"reference internal\" href=\"#classM2M2Lidar\"><span class=\"std std-ref\">M2M2Lidar</span></a> node. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
