selector_to_html = {"a[href=\"#_CPPv4NK6hi_can10addressing18standard_address_tcv13raw_address_tEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can10addressing18standard_address_tcv13raw_address_tEv\">\n<span id=\"_CPPv3NK6hi_can10addressing18standard_address_tcv13raw_address_tEv\"></span><span id=\"_CPPv2NK6hi_can10addressing18standard_address_tcv13raw_address_tEv\"></span><span id=\"hi_can::addressing::standard_address_t::castto-raw_address_t-operatorCCE\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1af4ac29675c4f8be165ea1e0b5c1c2363\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"typedef_namespacehi__can_1_1addressing_1a1790497c7a43f6e573f400d4899ea5c1.html#_CPPv4N6hi_can10addressing13raw_address_tE\" title=\"hi_can::addressing::raw_address_t (C++ type) \u2014 A raw CAN address.\"><span class=\"n\"><span class=\"pre\">raw_address_t</span></span></a></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Convert to a raw address. </p></dd>", "a[href=\"#breathe-section-title-public-members\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-members\">Public Members<a class=\"headerlink\" href=\"#breathe-section-title-public-members\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\"></span><span id=\"hi_can::addressing::standard_address_t::standard_address_t__uint8_tCR.uint8_tCR.uint8_tCR.uint8_tCR.uint8_tCR\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1a5ce3afeb974a43a758b89f5023ebbfb2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::system (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">system</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::subsystem (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">subsystem</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::device (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">device</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::group (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">group</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tERK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::parameter (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">parameter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6hi_can10addressing18standard_address_tcv13raw_address_tEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can10addressing18standard_address_tcv13raw_address_tEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>The raw address </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t5groupE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t5groupE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t5groupE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t5groupE\"></span><span id=\"hi_can::addressing::standard_address_t::group__uint8_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1ae4f560d8e4fc9aec5a75b190dc94f0e8\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">group</span></span></span><br/></dt><dd><p>The parameter group ID. </p></dd>", "a[href=\"structhi__can_1_1addressing_1_1structured__address__t.html#_CPPv4N6hi_can10addressing20structured_address_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing20structured_address_tE\">\n<span id=\"_CPPv3N6hi_can10addressing20structured_address_tE\"></span><span id=\"_CPPv2N6hi_can10addressing20structured_address_tE\"></span><span id=\"hi_can::addressing::structured_address_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1structured__address__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">structured_address_t</span></span></span><br/></dt><dd><p>Inheritence diagram for hi_can::addressing::structured_address_t:</p><p>An address which can be converted to a raw address - all addressing in the Hi-CAN library should inherit from this if possible. </p><p>Subclassed by <a class=\"reference internal\" href=\"structhi__can_1_1addressing_1_1drive_1_1vesc_1_1address__t.html#structhi__can_1_1addressing_1_1drive_1_1vesc_1_1address__t\"><span class=\"std std-ref\">hi_can::addressing::drive::vesc::address_t</span></a>, <a class=\"reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#structhi__can_1_1addressing_1_1flagged__address__t\"><span class=\"std std-ref\">hi_can::addressing::flagged_address_t</span></a>, <a class=\"reference internal\" href=\"structhi__can_1_1addressing_1_1legacy_1_1address__t.html#structhi__can_1_1addressing_1_1legacy_1_1address__t\"><span class=\"std std-ref\">hi_can::addressing::legacy::address_t</span></a>, <a class=\"reference internal\" href=\"structhi__can_1_1addressing_1_1standard__address__t.html#structhi__can_1_1addressing_1_1standard__address__t\"><span class=\"std std-ref\">hi_can::addressing::standard_address_t</span></a></p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t9parameterE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t9parameterE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t9parameterE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t9parameterE\"></span><span id=\"hi_can::addressing::standard_address_t::parameter__uint8_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1a079a8355c3dd9932723ec5a7c2ff248f\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">parameter</span></span></span><br/></dt><dd><p>The parameter ID. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_tE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_tE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_tE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_tE\"></span><span id=\"hi_can::addressing::standard_address_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1structured__address__t.html#_CPPv4N6hi_can10addressing20structured_address_tE\" title=\"hi_can::addressing::structured_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::structured_address_t:\"><span class=\"n\"><span class=\"pre\">structured_address_t</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::addressing::standard_address_t:</p><p>Collaboration diagram for hi_can::addressing::standard_address_t:</p><p>A standard address for a Hi-CAN compliant device. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t6systemE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t6systemE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t6systemE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t6systemE\"></span><span id=\"hi_can::addressing::standard_address_t::system__uint8_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1a389430edc77ae632f3fed4bd523130e6\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">system</span></span></span><br/></dt><dd><p>The system ID. </p></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t8_paddingE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t8_paddingE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t8_paddingE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t8_paddingE\"></span><span id=\"hi_can::addressing::standard_address_t::_padding__uint8_tC\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1abe863a28babab04c656bf508c2006a5f\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_padding</span></span></span><br/></dt><dd><p>Padding to fill out the rest of 32 bits so it\u2019s aligned. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\"></span><span id=\"hi_can::addressing::standard_address_t::standard_address_t__standard_address_t.uint8_tCR.uint8_tCR\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1af923228ee75361450b181aedd1d94428\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t (C++ function)\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::deviceAddress (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">deviceAddress</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::group (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">group</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can10addressing18standard_address_t18standard_address_tE18standard_address_tRK7uint8_tRK7uint8_t\" title=\"hi_can::addressing::standard_address_t::standard_address_t::parameter (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">parameter</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"typedef_namespacehi__can_1_1addressing_1a1790497c7a43f6e573f400d4899ea5c1.html#_CPPv4N6hi_can10addressing13raw_address_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing13raw_address_tE\">\n<span id=\"_CPPv3N6hi_can10addressing13raw_address_tE\"></span><span id=\"_CPPv2N6hi_can10addressing13raw_address_tE\"></span><span id=\"hi_can::addressing::raw_address_t\"></span><span class=\"target\" id=\"namespacehi__can_1_1addressing_1a1790497c7a43f6e573f400d4899ea5c1\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint32_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint32_t</span></span></a><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">raw_address_t</span></span></span><br/></dt><dd><p>A raw CAN address. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t9subsystemE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t9subsystemE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t9subsystemE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t9subsystemE\"></span><span id=\"hi_can::addressing::standard_address_t::subsystem__uint8_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1a5fe3b936e5464a1ef8c50f4617cd6844\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">subsystem</span></span></span><br/></dt><dd><p>The subsystem ID. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing18standard_address_t6deviceE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_t6deviceE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_t6deviceE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_t6deviceE\"></span><span id=\"hi_can::addressing::standard_address_t::device__uint8_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t_1a54844d7bb3042fcd001c17e0e8760edc\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">device</span></span></span><br/></dt><dd><p>The device ID. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
