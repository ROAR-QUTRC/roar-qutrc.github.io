selector_to_html = {"a[href=\"#_CPPv4N6hi_can13PacketManager21transmission_config_t25shouldTransmitImmediatelyE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can13PacketManager21transmission_config_t25shouldTransmitImmediatelyE\">\n<span id=\"_CPPv3N6hi_can13PacketManager21transmission_config_t25shouldTransmitImmediatelyE\"></span><span id=\"_CPPv2N6hi_can13PacketManager21transmission_config_t25shouldTransmitImmediatelyE\"></span><span id=\"hi_can::PacketManager::transmission_config_t::shouldTransmitImmediately__b\"></span><span class=\"target\" id=\"structhi__can_1_1PacketManager_1_1transmission__config__t_1abd7a554b66efa8e399eb48c5efa0e28d\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shouldTransmitImmediately</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><br/></dt><dd><p>Whether or not to transmit the packet immediately. If false, will transmit after the interval. </p></dd>", "a[href=\"classhi__can_1_1PacketManager.html#_CPPv4N6hi_can13PacketManager16data_generator_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can13PacketManager16data_generator_tE\">\n<span id=\"_CPPv3N6hi_can13PacketManager16data_generator_tE\"></span><span id=\"_CPPv2N6hi_can13PacketManager16data_generator_tE\"></span><span id=\"hi_can::PacketManager::data_generator_t\"></span><span class=\"target\" id=\"classhi__can_1_1PacketManager_1a2a222598169df01a4b4b68cd261acfa7\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/utility/functional/function\" title=\"std::function (C++11 standard class)\"><span class=\"n\"><span class=\"pre\">function</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/container/vector\" title=\"std::vector (C++ standard class)\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data_generator_t</span></span></span><br/></dt><dd><p>Function which generates packet data. </p></dd>", "a[href=\"#_CPPv4N6hi_can13PacketManager21transmission_config_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can13PacketManager21transmission_config_tE\">\n<span id=\"_CPPv3N6hi_can13PacketManager21transmission_config_tE\"></span><span id=\"_CPPv2N6hi_can13PacketManager21transmission_config_tE\"></span><span id=\"hi_can::PacketManager::transmission_config_t\"></span><span class=\"target\" id=\"structhi__can_1_1PacketManager_1_1transmission__config__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">transmission_config_t</span></span></span><br/></dt><dd><p>Configuration for scheduling a packet transmission. </p></dd>", "a[href=\"#_CPPv4N6hi_can13PacketManager21transmission_config_t9generatorE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can13PacketManager21transmission_config_t9generatorE\">\n<span id=\"_CPPv3N6hi_can13PacketManager21transmission_config_t9generatorE\"></span><span id=\"_CPPv2N6hi_can13PacketManager21transmission_config_t9generatorE\"></span><span id=\"hi_can::PacketManager::transmission_config_t::generator__data_generator_t\"></span><span class=\"target\" id=\"structhi__can_1_1PacketManager_1_1transmission__config__t_1a324ea64925dd5d69a40ca3c6aaf97028\"></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1PacketManager.html#_CPPv4N6hi_can13PacketManager16data_generator_tE\" title=\"hi_can::PacketManager::data_generator_t (C++ type) \u2014 Function which generates packet data.\"><span class=\"n\"><span class=\"pre\">data_generator_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">generator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span><br/></dt><dd><p>Function which returns the packet data to transmit. </p></dd>", "a[href=\"#_CPPv4N6hi_can13PacketManager21transmission_config_t8intervalE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can13PacketManager21transmission_config_t8intervalE\">\n<span id=\"_CPPv3N6hi_can13PacketManager21transmission_config_t8intervalE\"></span><span id=\"_CPPv2N6hi_can13PacketManager21transmission_config_t8intervalE\"></span><span id=\"hi_can::PacketManager::transmission_config_t::interval__std::chrono::steady_clock::duration\"></span><span class=\"target\" id=\"structhi__can_1_1PacketManager_1_1transmission__config__t_1a37a8ba51176edf72a73f084e778d0a90\"></span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">chrono</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/chrono/steady_clock\" title=\"std::chrono::steady_clock (C++11 standard class)\"><span class=\"n\"><span class=\"pre\">steady_clock</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">duration</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">interval</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">chrono</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/chrono/steady_clock\" title=\"std::chrono::steady_clock (C++11 standard class)\"><span class=\"n\"><span class=\"pre\">steady_clock</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">duration</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">zero</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><br/></dt><dd><p>The interval between transmissions - zero means transmit as often as possible. </p></dd>", "a[href=\"#breathe-section-title-public-members\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-members\">Public Members<a class=\"headerlink\" href=\"#breathe-section-title-public-members\" title=\"Permalink to this headline\">\u00b6</a></p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
