selector_to_html = {"a[href=\"variable_hi__can__address_8hpp_1a589c2b17cefc91283cf8ca3a90028c2c.html#_CPPv4N6hi_can10addressing6shared9SYSTEM_IDE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing6shared9SYSTEM_IDE\">\n<span id=\"_CPPv3N6hi_can10addressing6shared9SYSTEM_IDE\"></span><span id=\"_CPPv2N6hi_can10addressing6shared9SYSTEM_IDE\"></span><span id=\"hi_can::addressing::shared::SYSTEM_ID__uint8_t\"></span><span class=\"target\" id=\"hi__can__address_8hpp_1a589c2b17cefc91283cf8ca3a90028c2c\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">shared</span></span><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SYSTEM_ID</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x06</span></span><br/></dt><dd><p>System ID for devices not specific to one system only. </p></dd>", "a[href=\"variable_hi__can__address_8hpp_1a8967ec77023111b22e5d8486c40509de.html#_CPPv4N6hi_can10addressing6shared8elevator12SUBSYSTEM_IDE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing6shared8elevator12SUBSYSTEM_IDE\">\n<span id=\"_CPPv3N6hi_can10addressing6shared8elevator12SUBSYSTEM_IDE\"></span><span id=\"_CPPv2N6hi_can10addressing6shared8elevator12SUBSYSTEM_IDE\"></span><span id=\"hi_can::addressing::shared::elevator::SUBSYSTEM_ID__uint8_t\"></span><span class=\"target\" id=\"hi__can__address_8hpp_1a8967ec77023111b22e5d8486c40509de\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">shared</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">elevator</span></span><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SUBSYSTEM_ID</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span><br/></dt><dd><p>The elevator platform subsystem ID. </p></dd>", "a[href=\"structhi__can_1_1addressing_1_1standard__address__t.html#_CPPv4N6hi_can10addressing18standard_address_tE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing18standard_address_tE\">\n<span id=\"_CPPv3N6hi_can10addressing18standard_address_tE\"></span><span id=\"_CPPv2N6hi_can10addressing18standard_address_tE\"></span><span id=\"hi_can::addressing::standard_address_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1standard__address__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1structured__address__t.html#_CPPv4N6hi_can10addressing20structured_address_tE\" title=\"hi_can::addressing::structured_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::structured_address_t:\"><span class=\"n\"><span class=\"pre\">structured_address_t</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::addressing::standard_address_t:</p><p>Collaboration diagram for hi_can::addressing::standard_address_t:</p><p>A standard address for a Hi-CAN compliant device. </p></dd>", "a[href=\"#_CPPv4N6hi_can10addressing6shared8elevator8elevator14DEVICE_ADDRESSE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing6shared8elevator8elevator14DEVICE_ADDRESSE\">\n<span id=\"_CPPv3N6hi_can10addressing6shared8elevator8elevator14DEVICE_ADDRESSE\"></span><span id=\"_CPPv2N6hi_can10addressing6shared8elevator8elevator14DEVICE_ADDRESSE\"></span><span id=\"hi_can::addressing::shared::elevator::elevator::DEVICE_ADDRESS__standard_address_tC\"></span><span class=\"target\" id=\"hi__can__address_8hpp_1a5279d9211cd5549674407fddeafb67fd\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1standard__address__t.html#_CPPv4N6hi_can10addressing18standard_address_tE\" title=\"hi_can::addressing::standard_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::standard_address_t:\"><span class=\"n\"><span class=\"pre\">standard_address_t</span></span></a><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">shared</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">elevator</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">elevator</span></span><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DEVICE_ADDRESS</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><a class=\"reference internal\" href=\"variable_hi__can__address_8hpp_1a589c2b17cefc91283cf8ca3a90028c2c.html#_CPPv4N6hi_can10addressing6shared9SYSTEM_IDE\" title=\"hi_can::addressing::shared::SYSTEM_ID (C++ member) \u2014 System ID for devices not specific to one system only.\"><span class=\"n\"><span class=\"pre\">SYSTEM_ID</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"variable_hi__can__address_8hpp_1a8967ec77023111b22e5d8486c40509de.html#_CPPv4N6hi_can10addressing6shared8elevator12SUBSYSTEM_IDE\" title=\"hi_can::addressing::shared::elevator::SUBSYSTEM_ID (C++ member) \u2014 The elevator platform subsystem ID.\"><span class=\"n\"><span class=\"pre\">SUBSYSTEM_ID</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x00</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
