selector_to_html = {"a[href=\"classhi__can_1_1FilteredCanInterface.html#_CPPv4N6hi_can20FilteredCanInterfaceE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can20FilteredCanInterfaceE\">\n<span id=\"_CPPv3N6hi_can20FilteredCanInterfaceE\"></span><span id=\"_CPPv2N6hi_can20FilteredCanInterfaceE\"></span><span id=\"hi_can::FilteredCanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1FilteredCanInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FilteredCanInterface</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1CanInterface.html#_CPPv4N6hi_can12CanInterfaceE\" title=\"hi_can::CanInterface (C++ class) \u2014 Inheritence diagram for hi_can::CanInterface:\"><span class=\"n\"><span class=\"pre\">CanInterface</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::FilteredCanInterface:</p><p>Collaboration diagram for hi_can::FilteredCanInterface:</p><p>A variant of <a class=\"reference internal\" href=\"classhi__can_1_1CanInterface.html#classhi__can_1_1CanInterface\"><span class=\"std std-ref\">CanInterface</span></a> which contains a whitelist of filters. In the event that there are no filters, all packets are accepted. </p><p>Subclassed by <a class=\"reference internal\" href=\"classhi__can_1_1RawCanInterface.html#classhi__can_1_1RawCanInterface\"><span class=\"std std-ref\">hi_can::RawCanInterface</span></a>, <a class=\"reference internal\" href=\"classhi__can_1_1SoftwareFilteredCanInterface.html#classhi__can_1_1SoftwareFilteredCanInterface\"><span class=\"std std-ref\">hi_can::SoftwareFilteredCanInterface</span></a></p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet\">\n<span id=\"_CPPv3N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet\"></span><span id=\"_CPPv2N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet\"></span><span id=\"hi_can::SoftwareFilteredCanInterface::transmit__PacketCR\"></span><span class=\"target\" id=\"classhi__can_1_1SoftwareFilteredCanInterface_1a42accced79b89b194989ed1d0f052d46\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">transmit</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet-p-packet\" title=\"hi_can::SoftwareFilteredCanInterface::transmit::packet (C++ function parameter) \u2014 Packet to transmit\"><span class=\"n sig-param\"><span class=\"pre\">packet</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Transmits a packet on the CAN bus. </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE-p-interface\"]": "<dt id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE-p-interface\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/memory/shared_ptr\" title=\"std::shared_ptr (C++11 standard class)\"><span class=\"n\">shared_ptr</span></a><span class=\"p\">&lt;</span><a class=\"desctype reference internal\" href=\"classhi__can_1_1CanInterface.html#_CPPv4N6hi_can12CanInterfaceE\" title=\"hi_can::CanInterface (C++ class) \u2014 Inheritence diagram for hi_can::CanInterface:\"><span class=\"n\">CanInterface</span></a><span class=\"p\">&gt;</span><span class=\"w\"> </span><span class=\"n sig-param sig-name\">interface</span></dt><dd><p>The interface to use for I/O </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE\">\n<span id=\"_CPPv3N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE\"></span><span id=\"_CPPv2N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE\"></span><span id=\"hi_can::SoftwareFilteredCanInterface::SoftwareFilteredCanInterface__std::shared_ptr:CanInterface:C\"></span><span class=\"target\" id=\"classhi__can_1_1SoftwareFilteredCanInterface_1a789d58ddc4f634c62b3c53399c95f61c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SoftwareFilteredCanInterface</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/memory/shared_ptr\" title=\"std::shared_ptr (C++11 standard class)\"><span class=\"n\"><span class=\"pre\">shared_ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1CanInterface.html#_CPPv4N6hi_can12CanInterfaceE\" title=\"hi_can::CanInterface (C++ class) \u2014 Inheritence diagram for hi_can::CanInterface:\"><span class=\"n\"><span class=\"pre\">CanInterface</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface28SoftwareFilteredCanInterfaceEKNSt10shared_ptrI12CanInterfaceEE-p-interface\" title=\"hi_can::SoftwareFilteredCanInterface::SoftwareFilteredCanInterface::interface (C++ function parameter) \u2014 The interface to use for I/O\"><span class=\"n sig-param\"><span class=\"pre\">interface</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructs a new <a class=\"reference internal\" href=\"#classhi__can_1_1SoftwareFilteredCanInterface\"><span class=\"std std-ref\">SoftwareFilteredCanInterface</span></a> using the given interface for I/O. </p></dd>", "a[href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6PacketE\">\n<span id=\"_CPPv3N6hi_can6PacketE\"></span><span id=\"_CPPv2N6hi_can6PacketE\"></span><span id=\"hi_can::Packet\"></span><span class=\"target\" id=\"classhi__can_1_1Packet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><br/></dt><dd><p>A CAN packet containing an address and data. </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterfaceE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterfaceE\">\n<span id=\"_CPPv3N6hi_can28SoftwareFilteredCanInterfaceE\"></span><span id=\"_CPPv2N6hi_can28SoftwareFilteredCanInterfaceE\"></span><span id=\"hi_can::SoftwareFilteredCanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1SoftwareFilteredCanInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SoftwareFilteredCanInterface</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1FilteredCanInterface.html#_CPPv4N6hi_can20FilteredCanInterfaceE\" title=\"hi_can::FilteredCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::FilteredCanInterface:\"><span class=\"n\"><span class=\"pre\">FilteredCanInterface</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::SoftwareFilteredCanInterface:</p><p>Collaboration diagram for hi_can::SoftwareFilteredCanInterface:</p><p>A variant of <a class=\"reference internal\" href=\"classhi__can_1_1FilteredCanInterface.html#classhi__can_1_1FilteredCanInterface\"><span class=\"std std-ref\">FilteredCanInterface</span></a> implemented in software. </p></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"classhi__can_1_1CanInterface.html#_CPPv4N6hi_can12CanInterfaceE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can12CanInterfaceE\">\n<span id=\"_CPPv3N6hi_can12CanInterfaceE\"></span><span id=\"_CPPv2N6hi_can12CanInterfaceE\"></span><span id=\"hi_can::CanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1CanInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanInterface</span></span></span><br/></dt><dd><p>Inheritence diagram for hi_can::CanInterface:</p><p>Interface for sending and receiving packets on the CAN bus. </p><p>Subclassed by <a class=\"reference internal\" href=\"classhi__can_1_1FilteredCanInterface.html#classhi__can_1_1FilteredCanInterface\"><span class=\"std std-ref\">hi_can::FilteredCanInterface</span></a></p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-returns\"]": "<dt class=\"field-even\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p>The next packet in the buffer, or std::nullopt if the buffer is empty </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet-p-packet\"]": "<dt id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface8transmitERK6Packet-p-packet\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\">Packet</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">packet</span></dt><dd><p><a class=\"reference internal\" href=\"classhi__can_1_1Packet.html#classhi__can_1_1Packet\"><span class=\"std std-ref\">Packet</span></a> to transmit </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb\">\n<span id=\"_CPPv3N6hi_can28SoftwareFilteredCanInterface7receiveEb\"></span><span id=\"_CPPv2N6hi_can28SoftwareFilteredCanInterface7receiveEb\"></span><span id=\"hi_can::SoftwareFilteredCanInterface::receive__b\"></span><span class=\"target\" id=\"classhi__can_1_1SoftwareFilteredCanInterface_1ab7c24aef0c53e318aa1804c7dd4cf427\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/utility/optional\" title=\"std::optional (C++17 standard class)\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">receive</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-p-blocking\" title=\"hi_can::SoftwareFilteredCanInterface::receive::blocking (C++ function parameter) \u2014 Whether to block until a packet is received\"><span class=\"n sig-param\"><span class=\"pre\">blocking</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Pulls the next packet from the CAN bus buffer. </p></dd>", "a[href=\"#_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-p-blocking\"]": "<dt id=\"_CPPv4N6hi_can28SoftwareFilteredCanInterface7receiveEb-p-blocking\"><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n sig-param sig-name\">blocking</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">false</span></dt><dd><p>Whether to block until a packet is received </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
