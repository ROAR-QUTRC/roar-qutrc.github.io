selector_to_html = {"a[href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet-p-packet\"]": "<dt id=\"_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet-p-packet\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\">Packet</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">packet</span></dt><dd><p><a class=\"reference internal\" href=\"classhi__can_1_1Packet.html#classhi__can_1_1Packet\"><span class=\"std std-ref\">Packet</span></a> to transmit </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface7receiveEb-p-blocking\"]": "<dt id=\"_CPPv4N6hi_can15RawCanInterface7receiveEb-p-blocking\"><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n sig-param sig-name\">blocking</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">false</span></dt><dd><p>Whether to block until a packet is received </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface8transmitERK6Packet\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface8transmitERK6Packet\"></span><span id=\"hi_can::RawCanInterface::transmit__PacketCR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1acde468f388987ae83d8fc931c60ba59e\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">transmit</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet-p-packet\" title=\"hi_can::RawCanInterface::transmit::packet (C++ function parameter) \u2014 Packet to transmit\"><span class=\"n sig-param\"><span class=\"pre\">packet</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Transmits a packet on the CAN bus. </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterfaceaSE15RawCanInterface\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterfaceaSE15RawCanInterface\">\n<span id=\"_CPPv3N6hi_can15RawCanInterfaceaSE15RawCanInterface\"></span><span id=\"_CPPv2N6hi_can15RawCanInterfaceaSE15RawCanInterface\"></span><span id=\"hi_can::RawCanInterface::assign-operator__RawCanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1aaf547093834ff5e1df1a3a73af17d4e0\"></span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceaSE15RawCanInterface\" title=\"hi_can::RawCanInterface::operator=::other (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterfaceE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterfaceE\">\n<span id=\"_CPPv3N6hi_can15RawCanInterfaceE\"></span><span id=\"_CPPv2N6hi_can15RawCanInterfaceE\"></span><span id=\"hi_can::RawCanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1FilteredCanInterface.html#_CPPv4N6hi_can20FilteredCanInterfaceE\" title=\"hi_can::FilteredCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::FilteredCanInterface:\"><span class=\"n\"><span class=\"pre\">FilteredCanInterface</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::RawCanInterface:</p><p>Collaboration diagram for hi_can::RawCanInterface:</p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can15RawCanInterface8transmitERK6Packet-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface7receiveEb\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can15RawCanInterface7receiveEb\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface7receiveEb\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface7receiveEb\"></span><span id=\"hi_can::RawCanInterface::receive__b\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1aa9c5c58b57970b7975e82cbd23e8c8a9\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/utility/optional\" title=\"std::optional (C++17 standard class)\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">receive</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface7receiveEb-p-blocking\" title=\"hi_can::RawCanInterface::receive::blocking (C++ function parameter) \u2014 Whether to block until a packet is received\"><span class=\"n sig-param\"><span class=\"pre\">blocking</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Pulls the next packet from the CAN bus buffer. </p></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Itself for chaining </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface7receiveEb-returns\"]": "<dt class=\"field-even\" id=\"_CPPv4N6hi_can15RawCanInterface7receiveEb-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p>The next packet in the buffer, or std::nullopt if the buffer is empty </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE\"></span><span id=\"hi_can::RawCanInterface::addFilter__addressing::filter_tCR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a37859fbacc104cb7a66b31a28764d742\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">addFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1filter__t.html#_CPPv4N6hi_can10addressing8filter_tE\" title=\"hi_can::addressing::filter_t (C++ class) \u2014 Collaboration diagram for hi_can::addressing::filter_t:\"><span class=\"n\"><span class=\"pre\">filter_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE\" title=\"hi_can::RawCanInterface::addFilter::address (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Add a filter to the interface. </p></dd>", "a[href=\"classhi__can_1_1FilteredCanInterface.html#_CPPv4N6hi_can20FilteredCanInterfaceE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can20FilteredCanInterfaceE\">\n<span id=\"_CPPv3N6hi_can20FilteredCanInterfaceE\"></span><span id=\"_CPPv2N6hi_can20FilteredCanInterfaceE\"></span><span id=\"hi_can::FilteredCanInterface\"></span><span class=\"target\" id=\"classhi__can_1_1FilteredCanInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FilteredCanInterface</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"classhi__can_1_1CanInterface.html#_CPPv4N6hi_can12CanInterfaceE\" title=\"hi_can::CanInterface (C++ class) \u2014 Inheritence diagram for hi_can::CanInterface:\"><span class=\"n\"><span class=\"pre\">CanInterface</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::FilteredCanInterface:</p><p>Collaboration diagram for hi_can::FilteredCanInterface:</p><p>A variant of <a class=\"reference internal\" href=\"classhi__can_1_1CanInterface.html#classhi__can_1_1CanInterface\"><span class=\"std std-ref\">CanInterface</span></a> which contains a whitelist of filters. In the event that there are no filters, all packets are accepted. </p><p>Subclassed by <a class=\"reference internal\" href=\"classhi__can_1_1RawCanInterface.html#classhi__can_1_1RawCanInterface\"><span class=\"std std-ref\">hi_can::RawCanInterface</span></a>, <a class=\"reference internal\" href=\"classhi__can_1_1SoftwareFilteredCanInterface.html#classhi__can_1_1SoftwareFilteredCanInterface\"><span class=\"std std-ref\">hi_can::SoftwareFilteredCanInterface</span></a></p></dd>", "a[href=\"#breathe-section-title-friends\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-friends\">Friends<a class=\"headerlink\" href=\"#breathe-section-title-friends\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\"></span><span id=\"hi_can::RawCanInterface::RawCanInterface__RawCanInterfaceCR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a78eaebb1fe0a02d4877da4fa9485395f\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\" title=\"hi_can::RawCanInterface::RawCanInterface (C++ function)\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERK15RawCanInterface\" title=\"hi_can::RawCanInterface::RawCanInterface::other (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"classhi__can_1_1Packet.html#_CPPv4N6hi_can6PacketE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6PacketE\">\n<span id=\"_CPPv3N6hi_can6PacketE\"></span><span id=\"_CPPv2N6hi_can6PacketE\"></span><span id=\"hi_can::Packet\"></span><span class=\"target\" id=\"classhi__can_1_1Packet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><br/></dt><dd><p>A CAN packet containing an address and data. </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface7receiveEb-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can15RawCanInterface7receiveEb-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"structhi__can_1_1addressing_1_1filter__t.html#_CPPv4N6hi_can10addressing8filter_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can10addressing8filter_tE\">\n<span id=\"_CPPv3N6hi_can10addressing8filter_tE\"></span><span id=\"_CPPv2N6hi_can10addressing8filter_tE\"></span><span id=\"hi_can::addressing::filter_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1filter__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">filter_t</span></span></span><br/></dt><dd><p>Collaboration diagram for hi_can::addressing::filter_t:</p><p>A CAN address and mask for filtering, as well as whether to match RTR and error frames. </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can15RawCanInterface9addFilterERKN10addressing8filter_tE-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Itself for chaining </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE-p-interfaceName\"]": "<dt id=\"_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE-p-interfaceName\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/string/basic_string\" title=\"std::string (C++ standard type alias)\"><span class=\"n\">string</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">interfaceName</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">\"any\"</span></dt><dd><p>The interface name (can0, vcan1, etc) to use </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE\"></span><span id=\"hi_can::RawCanInterface::RawCanInterface__ssCR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a3bddb429d0ca3bb6f212c80b7a05e0be\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/string/basic_string\" title=\"std::string (C++ standard type alias)\"><span class=\"n\"><span class=\"pre\">string</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERKNSt6stringE-p-interfaceName\" title=\"hi_can::RawCanInterface::RawCanInterface::interfaceName (C++ function parameter) \u2014 The interface name (can0, vcan1, etc) to use\"><span class=\"n sig-param\"><span class=\"pre\">interfaceName</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"any\"</span></span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Instantiates a new <a class=\"reference internal\" href=\"#classhi__can_1_1RawCanInterface\"><span class=\"std std-ref\">RawCanInterface</span></a>. </p></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\"></span><span id=\"hi_can::RawCanInterface::swap__RawCanInterfaceR.RawCanInterfaceR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a9c1cef4a7ebf87ffbafbf1cdc94f9dc9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">friend</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">swap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\" title=\"hi_can::RawCanInterface::swap::first (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">first</span></span></a>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface4swapER15RawCanInterfaceR15RawCanInterface\" title=\"hi_can::RawCanInterface::swap::second (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">second</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\"></span><span id=\"hi_can::RawCanInterface::RawCanInterface__RawCanInterfaceRR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a7f9e49bdb6503902fdb74c123f122b0c\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\" title=\"hi_can::RawCanInterface::RawCanInterface (C++ function)\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface15RawCanInterfaceERR15RawCanInterface\" title=\"hi_can::RawCanInterface::RawCanInterface::other (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE\">\n<span id=\"_CPPv3N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE\"></span><span id=\"_CPPv2N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE\"></span><span id=\"hi_can::RawCanInterface::removeFilter__addressing::filter_tCR\"></span><span class=\"target\" id=\"classhi__can_1_1RawCanInterface_1a78353f3270693d826f6dabeac02cda23\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterfaceE\" title=\"hi_can::RawCanInterface (C++ class) \u2014 Inheritence diagram for hi_can::RawCanInterface:\"><span class=\"n\"><span class=\"pre\">RawCanInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">removeFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1filter__t.html#_CPPv4N6hi_can10addressing8filter_tE\" title=\"hi_can::addressing::filter_t (C++ class) \u2014 Collaboration diagram for hi_can::addressing::filter_t:\"><span class=\"n\"><span class=\"pre\">filter_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can15RawCanInterface12removeFilterERKN10addressing8filter_tE\" title=\"hi_can::RawCanInterface::removeFilter::address (C++ function parameter)\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Remove a filter from the interface. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
