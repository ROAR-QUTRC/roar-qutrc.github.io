selector_to_html = {"a[href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-returns\"]": "<dt class=\"field-even\" id=\"_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p>The buffer with the data copied into it, or std::nullopt if the buffer does not match the packet size </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-T\"]": "<dt id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-T\"><span class=\"k\">typename</span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\">T</span></span></dt><dd><p>The type of the data </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-dataLen\"]": "<dt id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-dataLen\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/size_t\" title=\"size_t (C standard type alias)\"><span class=\"n\">size_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">dataLen</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"m\">0</span></dt><dd><p>The length of the data array </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketeqERK6Packet\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6PacketeqERK6Packet\">\n<span id=\"_CPPv3NK6hi_can6PacketeqERK6Packet\"></span><span id=\"_CPPv2NK6hi_can6PacketeqERK6Packet\"></span><span id=\"hi_can::Packet::eq-operator__PacketCRC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a909e3fd14989502dab1927478e126521\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4NK6hi_can6PacketeqERK6Packet-p-other\" title=\"hi_can::Packet::operator==::other (C++ function parameter) \u2014 Packet to compare against\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Check if two packets are equal. Checks address and data. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-address\"]": "<dt id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-address\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">addressing</span><span class=\"p\">::</span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\">flagged_address_t</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">address</span></dt><dd><p>The address of the packet </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE\">\n<span id=\"_CPPv3N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE\"></span><span id=\"_CPPv2N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE\"></span><span id=\"hi_can::Packet::setAddress__addressing::flagged_address_tCR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1ac427cf864d1cdcff0587628ecd1a4a73\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setAddress</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\"><span class=\"pre\">flagged_address_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE-p-address\" title=\"hi_can::Packet::setAddress::address (C++ function parameter) \u2014 The address to set\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the packet address. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getDataLenEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet10getDataLenEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>The data length </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE\">\n<span id=\"_CPPv3N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE\"></span><span id=\"_CPPv2N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE\"></span><span id=\"hi_can::Packet::setData__std::vector:uint8_t:CR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a7445e1bd27b5655dc5796b507447bf5c\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/container/vector\" title=\"std::vector (C++ standard class)\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-p-data\" title=\"hi_can::Packet::setData::data (C++ function parameter) \u2014 The data to copy into the packet\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the packet data. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getAddressEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet10getAddressEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>The packet address </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketeqERK6Packet-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6PacketeqERK6Packet-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet13getIsExtendedEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet13getIsExtendedEv\">\n<span id=\"_CPPv3NK6hi_can6Packet13getIsExtendedEv\"></span><span id=\"_CPPv2NK6hi_can6Packet13getIsExtendedEv\"></span><span id=\"hi_can::Packet::getIsExtendedC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a2cbb40cd31fca2eb11b935530e660e62\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getIsExtended</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get whether the packet address is extended. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet8setIsRTRERKb-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet8setIsRTRERKb-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-throws\"]": "<dt class=\"field-odd\" id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/invalid_argument\" title=\"std::invalid_argument (C++ standard class)\"><span class=\"n\">invalid_argument</span></a></code></span> \u2013 If the data is too large to fit in the packet </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-T\"]": "<dt id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-T\"><span class=\"k\">typename</span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\">T</span></span></dt><dd><p>The type of the data </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-template-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-template-parameters\">Template Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6PacketE\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6PacketE\">\n<span id=\"_CPPv3N6hi_can6PacketE\"></span><span id=\"_CPPv2N6hi_can6PacketE\"></span><span id=\"hi_can::Packet\"></span><span class=\"target\" id=\"classhi__can_1_1Packet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><br/></dt><dd><p>A CAN packet containing an address and data. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet7getDataEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet7getDataEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>The packet data </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE-p-address\"]": "<dt id=\"_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE-p-address\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">addressing</span><span class=\"p\">::</span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\">flagged_address_t</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">address</span></dt><dd><p>The address to set </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketssERK6Packet-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6PacketssERK6Packet-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet13setIsExtendedERKb-p-isExtended\"]": "<dt id=\"_CPPv4N6hi_can6Packet13setIsExtendedERKb-p-isExtended\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">isExtended</span></dt><dd><p>Whether the address is extended </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getIsErrorEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet10getIsErrorEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Whether the address is an error </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet6PacketEv\">\n<span id=\"_CPPv3N6hi_can6Packet6PacketEv\"></span><span id=\"_CPPv2N6hi_can6Packet6PacketEv\"></span><span id=\"hi_can::Packet::Packet\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1abb82bce2b2d5257ce7be009b07c4f70e\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Default constructor - zero address, no data. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t\">\n<span id=\"_CPPv3N6hi_can6Packet7setDataEA_K7uint8_t6size_t\"></span><span id=\"_CPPv2N6hi_can6Packet7setDataEA_K7uint8_t6size_t\"></span><span id=\"hi_can::Packet::setData__uint8_tCA.s\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1afe2aa59fd5bd88daa648b8213f772f34\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-data\" title=\"hi_can::Packet::setData::data (C++ function parameter) \u2014 The data to copy into the packet\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/size_t\" title=\"size_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">size_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-dataLen\" title=\"hi_can::Packet::setData::dataLen (C++ function parameter) \u2014 The length of the data array\"><span class=\"n sig-param\"><span class=\"pre\">dataLen</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the packet data. </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-parameters\"]": "<dt class=\"field-even\" id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-even\"></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketneERK6Packet-p-other\"]": "<dt id=\"_CPPv4NK6hi_can6PacketneERK6Packet-p-other\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\">Packet</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">other</span></dt><dd><p><a class=\"reference internal\" href=\"#classhi__can_1_1Packet\"><span class=\"std std-ref\">Packet</span></a> to compare against </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet8setIsRTRERKb-p-isRTR\"]": "<dt id=\"_CPPv4N6hi_can6Packet8setIsRTRERKb-p-isRTR\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">isRTR</span></dt><dd><p>Whether the address is RTR </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketssERK6Packet-p-other\"]": "<dt id=\"_CPPv4NK6hi_can6PacketssERK6Packet-p-other\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\">Packet</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">other</span></dt><dd><p><a class=\"reference internal\" href=\"#classhi__can_1_1Packet\"><span class=\"std std-ref\">Packet</span></a> to compare against </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-data\"]": "<dt id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/container/vector\" title=\"std::vector (C++ standard class)\"><span class=\"n\">vector</span></a><span class=\"p\">&lt;</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"p\">&gt;</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">data</span></dt><dd><p>The data vector </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T\">\n<span id=\"_CPPv3I0EN6hi_can6Packet7setDataERK1T\"></span><span id=\"_CPPv2I0EN6hi_can6Packet7setDataERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname sig-name-nonprimary\"><a class=\"desctype n reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-T\" title=\"hi_can::Packet::setData::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\"><span class=\"pre\">T</span></span></a></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classhi__can_1_1Packet_1add549c112171f18e5a971bc9a1ad229f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-T\" title=\"hi_can::Packet::setData::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-data\" title=\"hi_can::Packet::setData::data (C++ function parameter) \u2014 The data to copy into the packet\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the packet data. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet8getIsRTREv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet8getIsRTREv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Whether the address is RTR </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketneERK6Packet\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6PacketneERK6Packet\">\n<span id=\"_CPPv3NK6hi_can6PacketneERK6Packet\"></span><span id=\"_CPPv2NK6hi_can6PacketneERK6Packet\"></span><span id=\"hi_can::Packet::neq-operator__PacketCRC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a11b5814403e38b40aac744ef68e84cef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4NK6hi_can6PacketneERK6Packet-p-other\" title=\"hi_can::Packet::operator!=::other (C++ function parameter) \u2014 Packet to compare against\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Check if two packets are not equal. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet13setIsExtendedERKb-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet13setIsExtendedERKb-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-dataLen\"]": "<dt id=\"_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-dataLen\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/size_t\" title=\"size_t (C standard type alias)\"><span class=\"n\">size_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">dataLen</span></dt><dd><p>The length of the data array </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setIsErrorERKb\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet10setIsErrorERKb\">\n<span id=\"_CPPv3N6hi_can6Packet10setIsErrorERKb\"></span><span id=\"_CPPv2N6hi_can6Packet10setIsErrorERKb\"></span><span id=\"hi_can::Packet::setIsError__bCR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a770750ab96dd54a952f807dfe2269129\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setIsError</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet10setIsErrorERKb-p-isError\" title=\"hi_can::Packet::setIsError::isError (C++ function parameter) \u2014 Whether the address is an error\"><span class=\"n sig-param\"><span class=\"pre\">isError</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set whether the packet address is an error. </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T\">\n<span id=\"_CPPv3I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T\"></span><span id=\"_CPPv2I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname sig-name-nonprimary\"><a class=\"desctype n reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-T\" title=\"hi_can::Packet::Packet::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\"><span class=\"pre\">T</span></span></a></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classhi__can_1_1Packet_1a6598049ed8701056f3c2f3b9e1521f31\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\"><span class=\"pre\">flagged_address_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-address\" title=\"hi_can::Packet::Packet::address (C++ function parameter) \u2014 The address of the packet\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-T\" title=\"hi_can::Packet::Packet::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-data\" title=\"hi_can::Packet::Packet::data (C++ function parameter) \u2014 The data to copy into the packet\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a packet from an address and data. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-data\"]": "<dt id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">data</span><span class=\"p\">[</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">nullptr</span></dt><dd><p>The packet data </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-address\"]": "<dt id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-address\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">addressing</span><span class=\"p\">::</span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\">flagged_address_t</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">address</span></dt><dd><p>The address of the packet </p></dd>", "a[href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv\">\n<span id=\"_CPPv3I0ENK6hi_can6Packet7getDataEv\"></span><span id=\"_CPPv2I0ENK6hi_can6Packet7getDataEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname sig-name-nonprimary\"><a class=\"desctype n reference internal\" href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-p-T\" title=\"hi_can::Packet::getData::T (C++ type template parameter) \u2014 The type of the buffer to copy it into\"><span class=\"n\"><span class=\"pre\">T</span></span></a></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classhi__can_1_1Packet_1a449e6a803eb3ab8df423b0f277561471\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/utility/optional\" title=\"std::optional (C++17 standard class)\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference internal\" href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-p-T\" title=\"hi_can::Packet::getData::T (C++ type template parameter) \u2014 The type of the buffer to copy it into\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Copies a packet\u2019s data into a buffer. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-address\"]": "<dt id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-address\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">addressing</span><span class=\"p\">::</span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\">flagged_address_t</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">address</span></dt><dd><p>The address of the packet </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet13getIsExtendedEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6Packet13getIsExtendedEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Whether the address is extended </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-template-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-template-parameters\">Template Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE\">\n<span id=\"_CPPv3N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE\"></span><span id=\"_CPPv2N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE\"></span><span id=\"hi_can::Packet::Packet__addressing::flagged_address_tCR.std::vector:uint8_t:CR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1af9a176b62e76529dd5e63b9854b35825\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\"><span class=\"pre\">flagged_address_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-address\" title=\"hi_can::Packet::Packet::address (C++ function parameter) \u2014 The address of the packet\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/container/vector\" title=\"std::vector (C++ standard class)\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tERKNSt6vectorI7uint8_tEE-p-data\" title=\"hi_can::Packet::Packet::data (C++ function parameter) \u2014 The data vector\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a packet from an address and data vector. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet13setIsExtendedERKb\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet13setIsExtendedERKb\">\n<span id=\"_CPPv3N6hi_can6Packet13setIsExtendedERKb\"></span><span id=\"_CPPv2N6hi_can6Packet13setIsExtendedERKb\"></span><span id=\"hi_can::Packet::setIsExtended__bCR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a6f69d0aa7d4a681410610923b561cd19\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setIsExtended</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet13setIsExtendedERKb-p-isExtended\" title=\"hi_can::Packet::setIsExtended::isExtended (C++ function parameter) \u2014 Whether the address is extended\"><span class=\"n sig-param\"><span class=\"pre\">isExtended</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set whether the packet address is extended. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet8getIsRTREv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet8getIsRTREv\">\n<span id=\"_CPPv3NK6hi_can6Packet8getIsRTREv\"></span><span id=\"_CPPv2NK6hi_can6Packet8getIsRTREv\"></span><span id=\"hi_can::Packet::getIsRTRC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1ad93db322d64ee4b13863d63492f031c1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getIsRTR</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get whether the packet address is RTR. </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-data\"]": "<dt id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-p-T\" title=\"hi_can::Packet::Packet::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\">T</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">data</span></dt><dd><p>The data to copy into the packet </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getIsErrorEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet10getIsErrorEv\">\n<span id=\"_CPPv3NK6hi_can6Packet10getIsErrorEv\"></span><span id=\"_CPPv2NK6hi_can6Packet10getIsErrorEv\"></span><span id=\"hi_can::Packet::getIsErrorC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a42843667cabd6730d03b2194b75c2ee8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getIsError</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get whether the packet address is an error. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-p-data\"]": "<dt id=\"_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/container/vector\" title=\"std::vector (C++ standard class)\"><span class=\"n\">vector</span></a><span class=\"p\">&lt;</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"p\">&gt;</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">data</span></dt><dd><p>The data to copy into the packet </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketeqERK6Packet-p-other\"]": "<dt id=\"_CPPv4NK6hi_can6PacketeqERK6Packet-p-other\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\">Packet</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">other</span></dt><dd><p><a class=\"reference internal\" href=\"#classhi__can_1_1Packet\"><span class=\"std std-ref\">Packet</span></a> to compare against </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-data\"]": "<dt id=\"_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">data</span><span class=\"p\">[</span><span class=\"p\">]</span></dt><dd><p>The data to copy into the packet </p></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N6hi_can6Packet8setIsRTRERKb\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N6hi_can6Packet8setIsRTRERKb\">\n<span id=\"_CPPv3N6hi_can6Packet8setIsRTRERKb\"></span><span id=\"_CPPv2N6hi_can6Packet8setIsRTRERKb\"></span><span id=\"hi_can::Packet::setIsRTR__bCR\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1ae618db7643ab44c6852ea386afb60d5c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setIsRTR</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet8setIsRTRERKb-p-isRTR\" title=\"hi_can::Packet::setIsRTR::isRTR (C++ function parameter) \u2014 Whether the address is RTR\"><span class=\"n sig-param\"><span class=\"pre\">isRTR</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set whether the packet address is RTR. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketneERK6Packet-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4NK6hi_can6PacketneERK6Packet-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet10setAddressERKN10addressing17flagged_address_tE-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getDataLenEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet10getDataLenEv\">\n<span id=\"_CPPv3NK6hi_can6Packet10getDataLenEv\"></span><span id=\"_CPPv2NK6hi_can6Packet10getDataLenEv\"></span><span id=\"hi_can::Packet::getDataLenC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a45f7ad7109c070c3bf10a53795ea6e4c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getDataLen</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the length of the data in the packet. </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-data\"]": "<dt id=\"_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-data\"><span class=\"k\">const</span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4I0EN6hi_can6Packet7setDataEvRK1T-p-T\" title=\"hi_can::Packet::setData::T (C++ type template parameter) \u2014 The type of the data\"><span class=\"n\">T</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">data</span></dt><dd><p>The data to copy into the packet </p></dd>", "a[href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can10addressing17flagged_address_tE\">\n<span id=\"_CPPv3N6hi_can10addressing17flagged_address_tE\"></span><span id=\"_CPPv2N6hi_can10addressing17flagged_address_tE\"></span><span id=\"hi_can::addressing::flagged_address_t\"></span><span class=\"target\" id=\"structhi__can_1_1addressing_1_1flagged__address__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flagged_address_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">hi_can</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1structured__address__t.html#_CPPv4N6hi_can10addressing20structured_address_tE\" title=\"hi_can::addressing::structured_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::structured_address_t:\"><span class=\"n\"><span class=\"pre\">structured_address_t</span></span></a><br/></dt><dd><p>Inheritence diagram for hi_can::addressing::flagged_address_t:</p><p>Collaboration diagram for hi_can::addressing::flagged_address_t:</p><p>A CAN address with flags for RTR, error, and extended (29-bit) addressing. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketeqERK6Packet-returns\"]": "<dt class=\"field-even\" id=\"_CPPv4NK6hi_can6PacketeqERK6Packet-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p>Whether the packets are equal </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketssERK6Packet\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6PacketssERK6Packet\">\n<span id=\"_CPPv3NK6hi_can6PacketssERK6Packet\"></span><span id=\"_CPPv2NK6hi_can6PacketssERK6Packet\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a35d3c9a3ba69da9ef6c9d2e71110541b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;=&gt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference internal\" href=\"#_CPPv4N6hi_can6PacketE\" title=\"hi_can::Packet (C++ class) \u2014 A CAN packet containing an address and data.\"><span class=\"n\"><span class=\"pre\">Packet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4NK6hi_can6PacketssERK6Packet-p-other\" title=\"hi_can::Packet::operator&lt;=&gt;::other (C++ function parameter) \u2014 Packet to compare against\"><span class=\"n sig-param\"><span class=\"pre\">other</span></span></a></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Compare two packets (for sorting). Sorts only by <a class=\"reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#structhi__can_1_1addressing_1_1flagged__address__t\"><span class=\"std std-ref\">address</span></a>. </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet10getAddressEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet10getAddressEv\">\n<span id=\"_CPPv3NK6hi_can6Packet10getAddressEv\"></span><span id=\"_CPPv2NK6hi_can6Packet10getAddressEv\"></span><span id=\"hi_can::Packet::getAddressC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1afa100d12c5fd1657ae4aba897fa70d53\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getAddress</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the packet address. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N6hi_can6Packet7setDataERKNSt6vectorI7uint8_tEE-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/invalid_argument\" title=\"std::invalid_argument (C++ standard class)\"><span class=\"n\">invalid_argument</span></a></code></span> \u2013 If the data is too large to fit in the packet </p></dd>", "a[href=\"#_CPPv4NK6hi_can6Packet7getDataEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4NK6hi_can6Packet7getDataEv\">\n<span id=\"_CPPv3NK6hi_can6Packet7getDataEv\"></span><span id=\"_CPPv2NK6hi_can6Packet7getDataEv\"></span><span id=\"hi_can::Packet::getDataC\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a391caceee8500baf5905f7f7c9721082\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the packet data. </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setIsErrorERKb-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N6hi_can6Packet10setIsErrorERKb-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet10setIsErrorERKb-p-isError\"]": "<dt id=\"_CPPv4N6hi_can6Packet10setIsErrorERKb-p-isError\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">isError</span></dt><dd><p>Whether the address is an error </p></dd>", "a[href=\"#_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-parameters\"]": "<dt class=\"field-even\" id=\"_CPPv4I0EN6hi_can6Packet6PacketERKN10addressing17flagged_address_tERK1T-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-even\"></dd>", "a[href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t\">\n<span id=\"_CPPv3N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t\"></span><span id=\"_CPPv2N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t\"></span><span id=\"hi_can::Packet::Packet__addressing::flagged_address_tCR.uint8_tCA.s\"></span><span class=\"target\" id=\"classhi__can_1_1Packet_1a3b12ce41f33d7a34fe745d9e1a934c11\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Packet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">addressing</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference internal\" href=\"structhi__can_1_1addressing_1_1flagged__address__t.html#_CPPv4N6hi_can10addressing17flagged_address_tE\" title=\"hi_can::addressing::flagged_address_t (C++ class) \u2014 Inheritence diagram for hi_can::addressing::flagged_address_t:\"><span class=\"n\"><span class=\"pre\">flagged_address_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-address\" title=\"hi_can::Packet::Packet::address (C++ function parameter) \u2014 The address of the packet\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-data\" title=\"hi_can::Packet::Packet::data (C++ function parameter) \u2014 The packet data\"><span class=\"n sig-param\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/size_t\" title=\"size_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">size_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N6hi_can6Packet6PacketERKN10addressing17flagged_address_tEA_K7uint8_t6size_t-p-dataLen\" title=\"hi_can::Packet::Packet::dataLen (C++ function parameter) \u2014 The length of the data array\"><span class=\"n sig-param\"><span class=\"pre\">dataLen</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a packet from an address and data array. </p></dd>", "a[href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-p-T\"]": "<dt id=\"_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-p-T\"><span class=\"k\">typename</span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\">T</span></span></dt><dd><p>The type of the buffer to copy it into </p></dd>", "a[href=\"#_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N6hi_can6Packet7setDataEA_K7uint8_t6size_t-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/invalid_argument\" title=\"std::invalid_argument (C++ standard class)\"><span class=\"n\">invalid_argument</span></a></code></span> \u2013 If the data is too large to fit in the packet </p></dd>", "a[href=\"#_CPPv4NK6hi_can6PacketneERK6Packet-returns\"]": "<dt class=\"field-even\" id=\"_CPPv4NK6hi_can6PacketneERK6Packet-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p>Whether the packets differ </p></dd>", "a[href=\"#_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-template-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4I0ENK6hi_can6Packet7getDataENSt8optionalI1TEEv-template-parameters\">Template Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
