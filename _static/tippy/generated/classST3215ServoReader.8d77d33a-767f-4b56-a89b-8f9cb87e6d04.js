selector_to_html = {"a[href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N17ST3215ServoReader12readPositionE7uint8_t\">\n<span id=\"_CPPv3N17ST3215ServoReader12readPositionE7uint8_t\"></span><span id=\"_CPPv2N17ST3215ServoReader12readPositionE7uint8_t\"></span><span id=\"ST3215ServoReader::readPosition__uint8_t\"></span><span class=\"target\" id=\"classST3215ServoReader_1a6d08cfa6f4e4685812751f8da27bbbf0\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint16_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint16_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">readPosition</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-p-servo_id\" title=\"ST3215ServoReader::readPosition::servo_id (C++ function parameter) \u2014 ID of the servo to read from\"><span class=\"n sig-param\"><span class=\"pre\">servo_id</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reads the current position of a specified servo. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-p-servo_id\"]": "<dt id=\"_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-p-servo_id\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">servo_id</span></dt><dd><p>ID of the servo to read from </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-position\"]": "<dt id=\"_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-position\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint16_t (C standard type alias)\"><span class=\"n\">uint16_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">position</span></dt><dd><p>Position value to write (0-4095) </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t\">\n<span id=\"_CPPv3N17ST3215ServoReader13writePositionE7uint8_t8uint16_t\"></span><span id=\"_CPPv2N17ST3215ServoReader13writePositionE7uint8_t8uint16_t\"></span><span id=\"ST3215ServoReader::writePosition__uint8_t.uint16_t\"></span><span class=\"target\" id=\"classST3215ServoReader_1a395300bd0662c1dacd81b9f7c22918b1\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">writePosition</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-servo_id\" title=\"ST3215ServoReader::writePosition::servo_id (C++ function parameter) \u2014 ID of the servo to write to\"><span class=\"n sig-param\"><span class=\"pre\">servo_id</span></span></a>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint16_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint16_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-position\" title=\"ST3215ServoReader::writePosition::position (C++ function parameter) \u2014 Position value to write (0-4095)\"><span class=\"n sig-param\"><span class=\"pre\">position</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Writes a position value to a specified servo. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13getSerialPortEv\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N17ST3215ServoReader13getSerialPortEv\">\n<span id=\"_CPPv3N17ST3215ServoReader13getSerialPortEv\"></span><span id=\"_CPPv2N17ST3215ServoReader13getSerialPortEv\"></span><span id=\"ST3215ServoReader::getSerialPort\"></span><span class=\"target\" id=\"classST3215ServoReader_1a555f171a0b96d2f48eeac26f4aa41839\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">boost</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">asio</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">serial_port</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getSerialPort</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Gets a reference to the serial port for low-level operations. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-servo_id\"]": "<dt id=\"_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-p-servo_id\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">servo_id</span></dt><dd><p>ID of the servo to write to </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/runtime_error\" title=\"std::runtime_error (C++ standard class)\"><span class=\"n\">runtime_error</span></a></code></span> \u2013 if communication fails </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t\">\n<span id=\"_CPPv3N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t\"></span><span id=\"_CPPv2N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t\"></span><span id=\"ST3215ServoReader::ST3215ServoReader__ssCR.unsigned-i.uint8_t\"></span><span class=\"target\" id=\"classST3215ServoReader_1adbf164e491ebde47920154ffe0653671\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ST3215ServoReader</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/string/basic_string\" title=\"std::string (C++ standard type alias)\"><span class=\"n\"><span class=\"pre\">string</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-port\" title='ST3215ServoReader::ST3215ServoReader::port (C++ function parameter) \u2014 Serial port path (e.g., \"/dev/ttyACM0\")'><span class=\"n sig-param\"><span class=\"pre\">port</span></span></a>, </span><span class=\"sig-param-decl\"><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-baud_rate\" title=\"ST3215ServoReader::ST3215ServoReader::baud_rate (C++ function parameter) \u2014 Baud rate for serial communication\"><span class=\"n sig-param\"><span class=\"pre\">baud_rate</span></span></a>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-acceleration\" title=\"ST3215ServoReader::ST3215ServoReader::acceleration (C++ function parameter) \u2014 Acceleration value for servo movement (0-255)\"><span class=\"n sig-param\"><span class=\"pre\">acceleration</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">30</span></span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructs a new <a class=\"reference internal\" href=\"#classST3215ServoReader\"><span class=\"std std-ref\">ST3215ServoReader</span></a>. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/runtime_error\" title=\"std::runtime_error (C++ standard class)\"><span class=\"n\">runtime_error</span></a></code></span> \u2013 if communication fails </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-port\"]": "<dt id=\"_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-port\"><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/string/basic_string\" title=\"std::string (C++ standard type alias)\"><span class=\"n\">string</span></a><span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"n sig-param sig-name\">port</span></dt><dd><p>Serial port path (e.g., \u201c/dev/ttyACM0\u201d) </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/runtime_error\" title=\"std::runtime_error (C++ standard class)\"><span class=\"n\">runtime_error</span></a></code></span> \u2013 if communication fails after retries </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-p-servo_id\"]": "<dt id=\"_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-p-servo_id\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">servo_id</span></dt><dd><p>ID of the servo to read from </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv417ST3215ServoReader\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv417ST3215ServoReader\">\n<span id=\"_CPPv317ST3215ServoReader\"></span><span id=\"_CPPv217ST3215ServoReader\"></span><span id=\"ST3215ServoReader\"></span><span class=\"target\" id=\"classST3215ServoReader\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ST3215ServoReader</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13getSerialPortEv-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader13getSerialPortEv-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Reference to the serial port object </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-baud_rate\"]": "<dt id=\"_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-baud_rate\"><span class=\"kt\">unsigned</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n sig-param sig-name\">baud_rate</span></dt><dd><p>Baud rate for serial communication </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-servo_id\"]": "<dt id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-servo_id\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">servo_id</span></dt><dd><p>ID of the servo to write to </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader12readPositionE7uint8_t-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Current position value (0-4095) </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-value\"]": "<dt id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-value\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">value</span></dt><dd><p>Value to write </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-returns\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-returns\">Returns<span class=\"colon\">:</span></dt><dd class=\"field-odd\"><p>Current load value (-1000 to +1000) </p></dd>", "a[href=\"#breathe-section-title-public-functions\"]": "<p class=\"breathe-sectiondef-title rubric\" id=\"breathe-section-title-public-functions\">Public Functions<a class=\"headerlink\" href=\"#breathe-section-title-public-functions\" title=\"Permalink to this headline\">\u00b6</a></p>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-address\"]": "<dt id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-address\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">address</span></dt><dd><p>Register address </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N17ST3215ServoReader8readLoadE7uint8_t\">\n<span id=\"_CPPv3N17ST3215ServoReader8readLoadE7uint8_t\"></span><span id=\"_CPPv2N17ST3215ServoReader8readLoadE7uint8_t\"></span><span id=\"ST3215ServoReader::readLoad__uint8_t\"></span><span class=\"target\" id=\"classST3215ServoReader_1a00b9eaf2089a8183f39de3bf37dee227\"></span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"int16_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">int16_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">readLoad</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader8readLoadE7uint8_t-p-servo_id\" title=\"ST3215ServoReader::readLoad::servo_id (C++ function parameter) \u2014 ID of the servo to read from\"><span class=\"n sig-param\"><span class=\"pre\">servo_id</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reads the current load/torque value from a specified servo. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-parameters\"]": "<dt class=\"field-odd\" id=\"_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-parameters\">Parameters<span class=\"colon\">:</span></dt><dd class=\"field-odd\"></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-acceleration\"]": "<dt id=\"_CPPv4N17ST3215ServoReader17ST3215ServoReaderERKNSt6stringEj7uint8_t-p-acceleration\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\">uint8_t</span></a><span class=\"w\"> </span><span class=\"n sig-param sig-name\">acceleration</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"m\">30</span></dt><dd><p>Acceleration value for servo movement (0-255) </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-throws\"]": "<dt class=\"field-even\" id=\"_CPPv4N17ST3215ServoReader13writePositionE7uint8_t8uint16_t-throws\">Throws<span class=\"colon\">:</span></dt><dd class=\"field-even\"><p><span><code class=\"cpp-expr sig sig-inline cpp highlight\"><span class=\"n\">std</span><span class=\"p\">::</span><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/cpp/error/runtime_error\" title=\"std::runtime_error (C++ standard class)\"><span class=\"n\">runtime_error</span></a></code></span> \u2013 if communication fails </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t\"]": "<dt class=\"sig sig-object highlight sig-wrap cpp\" id=\"_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t\">\n<span id=\"_CPPv3N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t\"></span><span id=\"_CPPv2N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t\"></span><span id=\"ST3215ServoReader::writeControlRegister__uint8_t.uint8_t.uint8_t\"></span><span class=\"target\" id=\"classST3215ServoReader_1ae9ad4dbb434a0fdd5dda174c3cb749d4\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">writeControlRegister</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-servo_id\" title=\"ST3215ServoReader::writeControlRegister::servo_id (C++ function parameter) \u2014 ID of the servo to write to\"><span class=\"n sig-param\"><span class=\"pre\">servo_id</span></span></a>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-address\" title=\"ST3215ServoReader::writeControlRegister::address (C++ function parameter) \u2014 Register address\"><span class=\"n sig-param\"><span class=\"pre\">address</span></span></a>, </span><span class=\"sig-param-decl\"><a class=\"desctype reference external\" href=\"https://en.cppreference.com/w/c/types/integer\" title=\"uint8_t (C standard type alias)\"><span class=\"n\"><span class=\"pre\">uint8_t</span></span></a><span class=\"w\"> </span><a class=\"n sig-param reference internal\" href=\"#_CPPv4N17ST3215ServoReader20writeControlRegisterE7uint8_t7uint8_t7uint8_t-p-value\" title=\"ST3215ServoReader::writeControlRegister::value (C++ function parameter) \u2014 Value to write\"><span class=\"n sig-param\"><span class=\"pre\">value</span></span></a></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Writes to a control register of the servo. </p></dd>", "a[href=\"#_CPPv4N17ST3215ServoReaderD0Ev\"]": "<dt class=\"sig sig-object highlight cpp\" id=\"_CPPv4N17ST3215ServoReaderD0Ev\">\n<span id=\"_CPPv3N17ST3215ServoReaderD0Ev\"></span><span id=\"_CPPv2N17ST3215ServoReaderD0Ev\"></span><span id=\"ST3215ServoReader::~ST3215ServoReader\"></span><span class=\"target\" id=\"classST3215ServoReader_1a86bb49cc03f49a1cb6f55b54f9966a45\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~ST3215ServoReader</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Destructor ensures serial port is properly closed. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
